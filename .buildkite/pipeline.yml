env:
  JULIA_VERSION: "1.10.9"
  JULIA_MINOR_VERSION: "1.10"
  TARTARUS_HOME: "/storage5/buildkite-agent"
  JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
  JULIA_PKG_SERVER_REGISTRY_PREFERENCE: eager
  JULIA_NUM_PRECOMPILE_TASKS: 24
  JULIA_NUM_THREADS: 8
  XLA_REACTANT_GPU_PREALLOCATE: false
  CUDA_VISIBLE_DEVICES: "3" # Tartarus device for GPU testing
  TMPDIR: "$TARTARUS_HOME/tmp"

agents:
  queue: "Oceananigans"
with: 
  coverage: false
  
steps:
  - label: "🏕️ initialize tartarus environment"
    key: "init"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "init"
      JULIA_BINDIR: "$TARTARUS_HOME/julia-$JULIA_VERSION/bin"
    command: |
      # Download julia binaries
      wget -N -P $TARTARUS_HOME https://julialang-s3.julialang.org/bin/linux/x64/$JULIA_MINOR_VERSION/julia-$JULIA_VERSION-linux-x86_64.tar.gz
      tar xf $TARTARUS_HOME/julia-$JULIA_VERSION-linux-x86_64.tar.gz -C $TARTARUS_HOME
      $TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'
    agents:
      queue: "Oceananigans"
    retry:
      automatic:
        - exit_status: 1
          limit: 1
          
  - wait

  - label: "{{ matrix.architecture }} - {{ matrix.group }} tests"
    key: "tests"
    agents:
      queue: "Oceananigans"
    command: |
      # Add matrix-specific environment variables
      if [[ "{{ matrix.architecture }}" == "CPU" ]]; then
        export CUDA_VISIBLE_DEVICES="-1"
        export TEST_ARCHITECTURE="CPU"
      else
        export CUDA_VISIBLE_DEVICES="3"
        export TEST_ARCHITECTURE="GPU"
      fi

      # Force IRFT runtime for Reactant (this can be moved to Project.toml on 1.11)
      touch LocalPreferences.toml
      echo "[Reactant]" >> LocalPreferences.toml
      echo "xla_runtime = \"IFRT\"" >> LocalPreferences.toml
      cat LocalPreferences.toml

      # Strip emoji for environment variable
      group="{{ matrix.group }}"
      export TEST_GROUP="\${group#* }"
      echo $TEST_GROUP

      # Run tests
      $TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e \
        'using Pkg; Pkg.test()'

    matrix:
      setup:
        architecture:
          - "CPU"
          - "GPU"
        group:
          - "🐇 unit"
          - "👻 abstract_operations"
          - "🕊 poisson_solvers_1"
          - "🦖 poisson_solvers_2"
          - "🌷 matrix_poisson_solvers"
          - "🦤 general_solvers"
          - "🎣 turbulence_closures"
          - "🦀 time_stepping_1"
          - "🦈 time_stepping_2"
          - "🦟 time_stepping_3"
          - "🐫 nonhydrostatic_regression"
          - "🐙 hydrostatic_free_surface"
          - "🫐 tripolar_grid"
          - "🥑 vertical_coordinate"
          - "🙈 hydrostatic_regression"
          - "🦢 shallow_water"
          - "🐳 simulation"
          - "🍂 lagrangian_particles"
          - "🧅 multi_region"
          - "🦧 scripts"
          - "👺 enzyme"
          - "👹 reactant_1"
          - "🎭 reactant_2"
    retry:
      automatic:
        - exit_status: 1
          limit: 1

  #####
  ##### Documentation
  #####

  - label: "🦉 documentation"
    env:
      JULIA_DEBUG: "Documenter"
      CUDA_VISIBLE_DEVICES: "1" # GPU for docs
    command: |
      $TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia --color=yes --project=docs/ -e \
        'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
      $TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia --color=yes --project=docs/ docs/make.jl
    agents:
      queue: "Oceananigans"
  - wait: ~
    continue_on_failure: true

  #####
  ##### Clean up
  #####

  - label: "🧹 clean up environment"
    command: "rm -rf $TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
    agents:
      queue: "Oceananigans"
