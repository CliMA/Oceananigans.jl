env:
  JULIA_VERSION: "1.10.8"
  JULIA_MINOR_VERSION: "1.10"
  TARTARUS_HOME: "/storage5/buildkite-agent"
  JULIA_PKG_SERVER_REGISTRY_PREFERENCE: eager
  JULIA_NUM_PRECOMPILE_TASKS: 24
  JULIA_NUM_THREADS: 8
  XLA_REACTANT_GPU_PREALLOCATE: false
  CUDA_VISIBLE_DEVICES: "3" # Tartarus device for GPU testing

steps:
  - label: "üèïÔ∏è initialize tartarus environment"
    key: "init"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "init"
      CUDA_VISIBLE_DEVICES: "3"
      JULIA_BINDIR: "$TARTARUS_HOME/julia-$JULIA_VERSION/bin"
      TMPDIR: "$TARTARUS_HOME/tmp"
    commands:
      # Download julia binaries
      - "wget -N -P $TARTARUS_HOME https://julialang-s3.julialang.org/bin/linux/x64/$JULIA_MINOR_VERSION/julia-$JULIA_VERSION-linux-x86_64.tar.gz"
      - "tar xf $TARTARUS_HOME/julia-$JULIA_VERSION-linux-x86_64.tar.gz -C $TARTARUS_HOME"
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1

#####
##### Unit tests
#####

  - label: "üêøÔ∏è gpu unit tests"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "unit"
      GPU_TEST: "true"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

  - label: "üêá cpu unit tests"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "unit"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

  # - label: "AMDGPU.jl unit tests"
  #   env:
  #     TEST_GROUP: "amdgpu"
  #   plugins:
  #     - JuliaCI/julia#v1:
  #         version: "1.10"
  #   agents:
  #     queue: "juliagpu"
  #     rocm: "*"
  #     rocmgpu: "*"
  #   env:
  #     JULIA_NUM_THREADS: 4
  #     JULIA_AMDGPU_CORE_MUST_LOAD: "1"
  #     JULIA_AMDGPU_HIP_MUST_LOAD: "1"
  #     JULIA_AMDGPU_DISABLE_ARTIFACTS: "1"
  #   command: |
  #     julia --color=yes --project -e 'using Pkg; Pkg.test()'"

  # - label: "oneAPI.jl unit tests"
  #   env:
  #     TEST_GROUP: "oneapi"
  #   plugins:
  #     - JuliaCI/julia#v1:
  #         version: "1.10"
  #   agents:
  #     queue: "juliagpu"
  #     intel: "*"
  #   command: |
  #     julia --color=yes --project -e 'using Pkg; Pkg.test()'"

#####
##### Solver tests
#####

  - label: "ü¶Ö gpu poisson solver tests 1"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "poisson_solvers_1"
      GPU_TEST: "true"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

  - label: "üïäÔ∏è cpu poisson solver tests 1"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "poisson_solvers_1"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

  - label: "ü¶ñ gpu poisson solver tests 2"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "poisson_solvers_2"
      GPU_TEST: "true"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

  - label: "ü¶ï cpu poisson solver tests 2"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "poisson_solvers_2"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

  - label: "üå∑ gpu matrix poisson solver tests"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "matrix_poisson_solvers"
      GPU_TEST: "true"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

  - label: "üåπ cpu matrix poisson solver tests"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "matrix_poisson_solvers"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

  - label: "ü¶§ gpu general solver tests"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "general_solvers"
      GPU_TEST: "true"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

  - label: "ü¶É cpu general solver tests"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "general_solvers"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

#####
##### Tripolar Grid tests
#####

  - label: "ü´ê gpu tripolar grid tests"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "tripolar_grid"
      GPU_TEST: "true"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1      
          limit: 1
    depends_on: "init"

  - label: "üçì cpu tripolar grid tests"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "tripolar_grid"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1      
          limit: 1
    depends_on: "init"

#####
##### NonhydrostaticModel and time stepping (part 1)
#####

  - label: "ü¶Ä gpu time stepping tests 1"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "time_stepping_1"
      GPU_TEST: "true"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

  - label: "ü¶û cpu time stepping tests 1"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "time_stepping_1"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

#####
##### NonhydrostaticModel and time stepping (part 2)
#####

  - label: "ü¶à gpu time stepping tests 2"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "time_stepping_2"
      GPU_TEST: "true"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

  - label: "üê¨ cpu time stepping tests 2"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "time_stepping_2"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

#####
##### NonhydrostaticModel and time stepping (part 3)
#####

  - label: "ü¶ü gpu time stepping tests 3"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "time_stepping_3"
      GPU_TEST: "true"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

  - label: "ü¶ó cpu time stepping tests 3"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "time_stepping_3"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

#####
##### Turbulence Closures
#####

            
  - label: "üé£ gpu turbulence closures"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "turbulence_closures"
      GPU_TEST: "true"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

#  The CPU turbulence closures test used to be here, but was moved to Github Actions. See https://github.com/CliMA/Oceananigans.jl/pull/3926

#####
##### HydrostaticFreeSurfaceModel
#####

  - label: "üêô gpu hydrostatic free surface model tests"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "hydrostatic_free_surface"
      GPU_TEST: "true"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

  - label: "ü¶ë cpu hydrostatic free surface model tests"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "hydrostatic_free_surface"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

#####
##### ShallowWaterModel
#####

  - label: "ü¶¢ gpu shallow water model tests"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "shallow_water"
      GPU_TEST: "true"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

  - label: "ü¶Ü cpu shallow water model tests"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "shallow_water"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

#####
##### Simulation
#####

  - label: "üê≥ gpu simulation tests"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "simulation"
      GPU_TEST: "true"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

  - label: "üêã cpu simulation tests"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "simulation"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

#####
##### Lagrangian particles tracking
#####

  - label: "üçÇ gpu lagrangian particles tests"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "lagrangian"
      GPU_TEST: "true"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

  - label: "üçÉ cpu lagrangian particles tests"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "lagrangian"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

#####
##### AbstractOperations
#####

  - label: "üëª gpu abstract operations tests"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "abstract_operations"
      GPU_TEST: "true"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

  - label: "ü§ñ cpu abstract operations tests"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "abstract_operations"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

#####
##### Multi-Region
#####

  - label: "üßÖ gpu multi region tests"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "multi_region"
      GPU_TEST: "true"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

  - label: "üßÑ cpu multi region tests"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "multi_region"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

#####
##### Regression
#####

  - label: "üê´ gpu nonhydrostatic regression tests"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "nonhydrostatic_regression"
      GPU_TEST: "true"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

  - label: "üê™ cpu nonhydrostatic regression tests"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "nonhydrostatic_regression"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

  - label: "üôà gpu hydrostatic regression tests"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "hydrostatic_regression"
      GPU_TEST: "true"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

  - label: "üôâ cpu hydrostatic regression tests"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "hydrostatic_regression"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

#####
##### Scripts
#####

  - label: "ü¶ß gpu scripts"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "scripts"
      GPU_TEST: "true"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

  - label: "ü¶ç cpu scripts"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "scripts"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

#####
##### Vertical Coordinates tests
#####

  - label: "ü•ë gpu vertical coordinate"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "vertical_coordinate"
      GPU_TEST: "true"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1      
          limit: 1
    depends_on: "init"

  - label: "ü•í cpu vertical coordinate"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "vertical_coordinate"
      CUDA_VISIBLE_DEVICES: "-1"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1      
          limit: 1
    depends_on: "init"

#####
##### Enzyme extension tests
#####

  - label: "üë∫ gpu Enzyme extension tests"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "enzyme"
      GPU_TEST: "true"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

  - label: "üëπ cpu Enzyme extension tests"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "enzyme"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

#####
##### Reactant extension tests
#####

  - label: "üë∫ gpu IFRT Reactant extension tests 1"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "reactant_1"
      GPU_TEST: "true"
    commands: |
      touch LocalPreferences.toml

      echo "[Reactant]" >> LocalPreferences.toml
      echo "xla_runtime = \"IFRT\"" >> LocalPreferences.toml

      cat LocalPreferences.toml
      
      $TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

  - label: "üëπ cpu IFRT Reactant extension tests 1"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "reactant_1"
      CUDA_VISIBLE_DEVICES: "-1"
    commands: |
      touch LocalPreferences.toml

      echo "[Reactant]" >> LocalPreferences.toml
      echo "xla_runtime = \"IFRT\"" >> LocalPreferences.toml

      cat LocalPreferences.toml

      $TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

  - label: "üé≠ gpu IFRT Reactant extension tests 2"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "reactant_2"
      GPU_TEST: "true"
    commands: |
      touch LocalPreferences.toml

      echo "[Reactant]" >> LocalPreferences.toml
      echo "xla_runtime = \"IFRT\"" >> LocalPreferences.toml

      cat LocalPreferences.toml

      $TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

  - label: "üßå cpu IFRT Reactant extension tests 2"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "reactant_2"
      CUDA_VISIBLE_DEVICES: "-1"
    commands: |
      touch LocalPreferences.toml

      echo "[Reactant]" >> LocalPreferences.toml
      echo "xla_runtime = \"IFRT\"" >> LocalPreferences.toml

      cat LocalPreferences.toml

      $TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'
    agents:
      queue: Oceananigans
      architecture: CPU
    retry:
      automatic:
        - exit_status: 1
          limit: 1
    depends_on: "init"

#####
##### Documentation
#####

  - label: "ü¶â documentation"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      CUDA_VISIBLE_DEVICES: "0"
      JULIA_DEBUG: "Documenter"
      TMPDIR: "$TARTARUS_HOME/tmp"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia --color=yes --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'"
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia --color=yes --project=docs/ docs/make.jl"
    agents:
      queue: Oceananigans
      architecture: CPU
    depends_on: "init"

  - wait: ~
    continue_on_failure: true

#####
##### Clean up
#####

  - label: "üßπ clean up environment"
    command: "rm -rf $TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
    agents:
      queue: Oceananigans
      architecture: CPU
