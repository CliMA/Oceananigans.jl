env:
  JULIA_VERSION: "1.5.3"
  JULIA_MINOR_VERSION: "1.5"
  SVERDRUP_HOME: "/data5/glwagner"
  TARTARUS_HOME: "/storage7/buildkite-agent"
  GKSwstype: "100" # See: https://github.com/jheinen/GR.jl/issues/278

steps:
  - label: "üé™ initialize gpu environment"
    key: "init_gpu"
    env:
      JULIA_DEPOT_PATH: "$SVERDRUP_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "init"
    commands:
      # Download julia binaries
      - "wget -N -P $SVERDRUP_HOME https://julialang-s3.julialang.org/bin/linux/x64/$JULIA_MINOR_VERSION/julia-$JULIA_VERSION-linux-x86_64.tar.gz"
      - "tar xf $SVERDRUP_HOME/julia-$JULIA_VERSION-linux-x86_64.tar.gz -C $SVERDRUP_HOME"

      # Instantiate and precompile
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.instantiate(; verbose=true)'"
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.build()'"
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.precompile()'"
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.status()'"

      # Force the initialization of the CUDA runtime as it is lazily loaded by default
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using CUDA; CUDA.versioninfo()'"

      # Download artifacts by running an empty testgroup and thereby executing /test/runtests.jl
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: GPU

  - label: "üèïÔ∏è initialize cpu environment"
    key: "init_cpu"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "init"
      CUDA_VISIBLE_DEVICES: "-1"
    commands:
      # Download julia binaries
      - "wget -N -P $TARTARUS_HOME https://julialang-s3.julialang.org/bin/linux/x64/$JULIA_MINOR_VERSION/julia-$JULIA_VERSION-linux-x86_64.tar.gz"
      - "tar xf $TARTARUS_HOME/julia-$JULIA_VERSION-linux-x86_64.tar.gz -C $TARTARUS_HOME"

      # Instantiate, precompile, and download artifacts by running an empty testgroup and thereby executing /test/runtests.jl
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.instantiate(; verbose=true)'"
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.precompile()'"
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.status()'"
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"

      # Set up the mpiexecjl command
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using MPI; MPI.install_mpiexecjl()'"
    agents:
      queue: Oceananigans
      architecture: CPU

#####
##### Unit tests
#####

  - label: "üêÄ gpu unit tests"
    env:
      JULIA_DEPOT_PATH: "$SVERDRUP_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "unit"
    commands:
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: GPU
    depends_on: "init_gpu"

  - label: "üêá cpu unit tests"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "unit"
      CUDA_VISIBLE_DEVICES: "-1"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    depends_on: "init_cpu"

#####
##### Solver tests
#####

  - label: "ü¶Ö gpu solver tests"
    env:
      JULIA_DEPOT_PATH: "$SVERDRUP_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "solvers"
    commands:
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: GPU
    depends_on: "init_gpu"

  - label: "üïäÔ∏è cpu solver tests"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "solvers"
      CUDA_VISIBLE_DEVICES: "-1"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    depends_on: "init_cpu"

#####
##### IncompressibleModel and time stepping (part 1)
#####

  - label: "ü¶Ä gpu time stepping tests 1"
    env:
      JULIA_DEPOT_PATH: "$SVERDRUP_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "time_stepping_1"
    commands:
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: GPU
    depends_on: "init_gpu"

  - label: "ü¶û cpu time stepping tests 1"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "time_stepping_1"
      CUDA_VISIBLE_DEVICES: "-1"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    depends_on: "init_cpu"

#####
##### IncompressibleModel and time stepping (part 2)
#####

  - label: "ü¶à gpu time stepping tests 2"
    env:
      JULIA_DEPOT_PATH: "$SVERDRUP_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "time_stepping_2"
    commands:
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: GPU
    depends_on: "init_gpu"

  - label: "üê¨ cpu time stepping tests 2"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "time_stepping_2"
      CUDA_VISIBLE_DEVICES: "-1"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    depends_on: "init_cpu"

#####
##### HydrostaticFreeSurfaceModel
#####

  - label: "üê° gpu hydrostatic free surface model tests"
    env:
      JULIA_DEPOT_PATH: "$SVERDRUP_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "hydrostatic_free_surface"
    commands:
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: GPU
    depends_on: "init_gpu"

  - label: "üê† cpu hydrostatic free surface model tests"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "hydrostatic_free_surface"
      CUDA_VISIBLE_DEVICES: "-1"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    depends_on: "init_cpu"

#####
##### ShallowWaterModel
#####

  - label: "ü¶ë gpu shallow water model tests"
    env:
      JULIA_DEPOT_PATH: "$SVERDRUP_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "shallow_water"
    commands:
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: GPU
    depends_on: "init_gpu"

  - label: "ü¶ê cpu shallow water model tests"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "shallow_water"
      CUDA_VISIBLE_DEVICES: "-1"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    depends_on: "init_cpu"

#####
##### Simulation
#####

  - label: "üê≥ gpu simulation tests"
    env:
      JULIA_DEPOT_PATH: "$SVERDRUP_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "simulation"
    commands:
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: GPU
    depends_on: "init_gpu"

  - label: "üêã cpu simulation tests"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "simulation"
      CUDA_VISIBLE_DEVICES: "-1"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    depends_on: "init_cpu"

#####
##### Distributed/MPI
#####

  - label: "üêâ cpu distributed tests"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "distributed"
      CUDA_VISIBLE_DEVICES: "-1"
    commands:
      - "PATH=$PATH:$TARTARUS_HOME/julia-$JULIA_VERSION/bin"  # Need julia binary in $PATH for mpiexecjl to work.
      - "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER/bin/mpiexecjl -np 4 $TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    depends_on: "init_cpu"

#####
##### Regression
#####

  - label: "üê´ gpu regression tests"
    env:
      JULIA_DEPOT_PATH: "$SVERDRUP_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "regression"
    commands:
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: GPU
    depends_on: "init_gpu"

  - label: "üê™ cpu regression tests"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "regression"
      CUDA_VISIBLE_DEVICES: "-1"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    depends_on: "init_cpu"

#####
##### Scripts
#####

  - label: "ü¶ß gpu scripts"
    env:
      JULIA_DEPOT_PATH: "$SVERDRUP_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "scripts"
    commands:
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: GPU
    depends_on: "init_gpu"

  - label: "ü¶ç cpu scripts"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "scripts"
      CUDA_VISIBLE_DEVICES: "-1"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    depends_on: "init_cpu"

#####
##### Documentation
#####

  - label: "ü¶â documentation"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      CUDA_VISIBLE_DEVICES: "-1"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia --color=yes --project=docs/ -e 'using Pkg; Pkg.instantiate(); Pkg.develop(PackageSpec(path=pwd()))'"
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia --color=yes --project=docs/ docs/make.jl"
    agents:
      queue: Oceananigans
      architecture: CPU
    depends_on: "init_cpu"

  - wait: ~
    continue_on_failure: true

#####
##### Clean up
#####

  - label: "üßΩ clean up gpu environment"
    command: "rm -rf $SVERDRUP_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
    agents:
      queue: Oceananigans
      architecture: GPU

  - label: "üßπ clean up cpu environment"
    command: "rm -rf $TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
    agents:
      queue: Oceananigans
      architecture: CPU
