env:
  JULIA_VERSION: "1.10.8"
  JULIA_MINOR_VERSION: "1.10"
  TARTARUS_HOME: "/storage5/buildkite-agent"
  JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
  JULIA_PKG_SERVER_REGISTRY_PREFERENCE: eager
  JULIA_NUM_PRECOMPILE_TASKS: 24
  JULIA_NUM_THREADS: 8
  XLA_REACTANT_GPU_PREALLOCATE: false
  CUDA_VISIBLE_DEVICES: "3" # Tartarus device for GPU testing
  TMPDIR: "$TARTARUS_HOME/tmp"

agents:
  queue: "Oceananigans"

steps:
  - label: "üèïÔ∏è initialize tartarus environment"
    key: "init"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "init"
      JULIA_BINDIR: "$TARTARUS_HOME/julia-$JULIA_VERSION/bin"
    command: |
      # Download julia binaries
      wget -N -P $TARTARUS_HOME https://julialang-s3.julialang.org/bin/linux/x64/$JULIA_MINOR_VERSION/julia-$JULIA_VERSION-linux-x86_64.tar.gz
      tar xf $TARTARUS_HOME/julia-$JULIA_VERSION-linux-x86_64.tar.gz -C $TARTARUS_HOME
      $TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'
    agents:
      queue: "Oceananigans"
    retry:
      automatic:
        - exit_status: 1
          limit: 1
  - wait

  - label: "{{ matrix.architecture }} - {{ matrix.display }}"
    key: "tests"
    agents:
      queue: "Oceananigans"
    command: |
      if [[ "{{matrix.architecture}}" == "CPU" ]]; then
        export CUDA_VISIBLE_DEVICES="-1"
        export TEST_ARCHITECTURE="CPU"
      else
        export CUDA_VISIBLE_DEVICES="3"
        export TEST_ARCHITECTURE="GPU"
      fi

      export TEST_GROUP="{{ matrix.group }}"

      $TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e \
        'using Pkg; Pkg.test()'

    matrix:
      setup:
        architecture: ["CPU", "GPU"]
        group:
          - group: "unit"
            display: "üêá unit tests"
          - group: "poisson_solvers_1"
            display: "üïäÔ∏è poisson solver tests 1"
          - group: "poisson_solvers_2"
            display: "ü¶ñ poisson solver tests 2"
          - group: "matrix_poisson_solvers"
            display: "üå∑ matrix poisson solvers"
          - group: "general_solvers"
            display: "ü¶§ general solver tests"
          - group: "tripolar_grid"
            display: "ü´ê tripolar grid tests"
          - group: "time_stepping_1"
            display: "ü¶Ä time-stepping 1"
          - group: "time_stepping_2"
            display: "ü¶à time-stepping 2"
          - group: "time_stepping_3"
            display: "ü¶ü time-stepping 3"
          - group: "turbulence_closures"
            display: "üé£ turbulence closures"
          - group: "hydrostatic_free_surface"
            display: "üêô hydrostatic free surface"
          - group: "shallow_water"
            display: "ü¶¢ shallow water model"
          - group: "simulation"
            display: "üê≥ simulation tests"
          - group: "lagrangian"
            display: "üçÇ lagrangian particles"
          - group: "abstract_operations"
            display: "üëª abstract operations"
          - group: "multi_region"
            display: "üßÖ multi-region tests"
          - group: "nonhydrostatic_regression"
            display: "üê´ nonhydrostatic regression"
          - group: "hydrostatic_regression"
            display: "üôà hydrostatic regression"
          - group: "scripts"
            display: "ü¶ß scripts"
          - group: "vertical_coordinate"
            display: "ü•ë vertical coordinate"
          - group: "enzyme"
            display: "üë∫ Enzyme extension"
          - group: "reactant_1"
            display: "üëπ IFRT Reactant 1"
          - group: "reactant_2"
            display: "üé≠ IFRT Reactant 2"
    retry:
      automatic:
        - exit_status: 1
          limit: 1

  #####
  ##### Documentation
  #####

  - label: "ü¶â documentation"
    env:
      JULIA_DEBUG: "Documenter"
      CUDA_VISIBLE_DEVICES: "1" # GPU for docs
    command: |
      $TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia --color=yes --project=docs/ -e \
        'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
      $TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia --color=yes --project=docs/ docs/make.jl
    agents:
      queue: "Oceananigans"
  - wait: ~
    continue_on_failure: true

  #####
  ##### Clean up
  #####

  - label: "üßπ clean up environment"
    command: "rm -rf $TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
    agents:
      queue: "Oceananigans"
