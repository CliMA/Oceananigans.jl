env:
  JULIA_VERSION: "1.10.10"
  BUILDKITE_HOME: "/var/lib/buildkite-agent"
  JULIA_DEPOT_PATH: "$BUILDKITE_HOME/.julia-oceananigans"
  JULIA_PKG_SERVER_REGISTRY_PREFERENCE: eager
  XLA_REACTANT_GPU_PREALLOCATE: false
  OCEANANIGANS_DIR: "$HOME/Oceananigans.jl-$BUILDKITE_BUILD_NUMBER"

agents:
  queue: "Oceananigans"
with:
  coverage: false

steps:
  - label: "🏕️ initialize environment"
    key: "init"
    agents:
      queue: "Oceananigans-nautilus"
    env:
      TEST_GROUP: "init"
    command: |
      juliaup add $JULIA_VERSION

      mkdir -p "$OCEANANIGANS_DIR"
      rsync -a . "$OCEANANIGANS_DIR/"
      cd "$OCEANANIGANS_DIR"

      julia +$JULIA_VERSION -O0 --color=yes --project -e 'using Pkg; Pkg.test()'
    retry:
      automatic:
        - exit_status: 1
          limit: 1

  - label: "{{ matrix.architecture }} - {{ matrix.group }} tests"
    key: "tests"
    depends_on: "init"
    agents:
      queue: "Oceananigans-nautilus"
    command: |
      # Add matrix-specific environment variables
      if [[ "{{ matrix.architecture }}" == "CPU" ]]; then
        export CUDA_VISIBLE_DEVICES="-1"
        export TEST_ARCHITECTURE="CPU"
      else
        export CUDA_VISIBLE_DEVICES="0"
        export TEST_ARCHITECTURE="GPU"
      fi

      # Force IFRT runtime for Reactant (this can be moved to Project.toml on 1.11)
      touch LocalPreferences.toml
      echo "[Reactant]" >> LocalPreferences.toml
      echo "xla_runtime = \"IFRT\"" >> LocalPreferences.toml
      cat LocalPreferences.toml

      # Strip emoji for environment variable
      group="{{ matrix.group }}"
      export TEST_GROUP="\${group#* }"
      echo $TEST_GROUP

      # Run tests
      cd "$OCEANANIGANS_DIR"
      julia +$JULIA_VERSION -O0 --color=yes --project -e 'using Pkg; Pkg.test()'

    matrix:
      setup:
        architecture:
          - "CPU"
          - "GPU"
        group:
          - "🐇 unit"
          - "👻 abstract_operations"
          - "🕊 poisson_solvers_1"
          - "🦖 poisson_solvers_2"
          - "🌷 matrix_poisson_solvers"
          - "🦤 general_solvers"
          - "🎣 turbulence_closures"
          - "🦀 time_stepping_1"
          - "🦈 time_stepping_2"
          - "🦟 time_stepping_3"
          - "🐫 nonhydrostatic_regression"
          - "🐙 hydrostatic_free_surface"
          - "🫐 tripolar_grid"
          - "🥑 vertical_coordinate"
          - "🙈 hydrostatic_regression"
          - "🦢 shallow_water"
          - "🐳 simulation"
          - "🍂 lagrangian_particles"
          - "🧅 multi_region"
          - "🦧 scripts"
          - "👺 enzyme"
          - "👹 reactant_1"
          - "🎭 reactant_2"
    retry:
      automatic:
        - exit_status: 1
          limit: 1

  #####
  ##### Documentation
  #####

  - label: "🦉 documentation"
    depends_on: "init"
    agents:
      queue: "Oceananigans-nautilus"
    env:
      CUDA_VISIBLE_DEVICES: "0" # GPU for docs
    command: |
      cd "$OCEANANIGANS_DIR"
      julia +$JULIA_VERSION --color=yes --project=docs/ -e \
        'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
      julia +$JULIA_VERSION --color=yes --project=docs/ docs/make.jl

  #####
  ##### Blocking wait on tests and documentation
  #####

  - wait: ~
    continue_on_failure: true

  #####
  ##### Clean up
  #####

  - label: "🧹 clean up environment"
    agents:
      queue: "Oceananigans-nautilus"
    commands:
      - "test -d $OCEANANIGANS_DIR && du -hs $OCEANANIGANS_DIR || true"
      - "test -d $OCEANANIGANS_DIR && rm -rf $OCEANANIGANS_DIR || true"
