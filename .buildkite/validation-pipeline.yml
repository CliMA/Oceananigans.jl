env:
  JULIA_VERSION: "1.6.1"
  JULIA_MINOR_VERSION: "1.6"
  SVERDRUP_HOME: "/data5/glwagner"
  TARTARUS_HOME: "/storage7/buildkite-agent"

steps:
  - label: "üé™ initialize gpu environment"
    key: "init_gpu"
    env:
      JULIA_DEPOT_PATH: "$SVERDRUP_HOME/.julia-validation-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "convergence"
      VALIDATION_TEST: "init"
    commands:
      # Download julia binaries
      - "wget -N -P $SVERDRUP_HOME https://julialang-s3.julialang.org/bin/linux/x64/$JULIA_MINOR_VERSION/julia-$JULIA_VERSION-linux-x86_64.tar.gz"
      - "tar xf $SVERDRUP_HOME/julia-$JULIA_VERSION-linux-x86_64.tar.gz -C $SVERDRUP_HOME"

      # Instantiate and precompile
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.instantiate(; verbose=true)'"
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.build()'"
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.precompile()'"
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.status()'"

      # Force the initialization of the CUDA runtime as it is lazily loaded by default
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using CUDA; CUDA.versioninfo()'"

      # Download artifacts by running an empty testgroup and thereby executing /test/runtests.jl
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"

      # Use Conda.jl to provide PyPlot
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project=validation/convergence_tests/ -e 'using Pkg; Pkg.add(\"PyCall\"); ENV[\"PYTHON\"]=\"\"; Pkg.build(\"PyCall\"); using PyPlot;'"
    agents:
      queue: Oceananigans
      architecture: GPU

  - label: "üèïÔ∏è initialize cpu environment"
    key: "init_cpu"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-validation-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "convergence"
      VALIDATION_TEST: "init"
      CUDA_VISIBLE_DEVICES: "-1"
    commands:
      # Download julia binaries
      - "wget -N -P $TARTARUS_HOME https://julialang-s3.julialang.org/bin/linux/x64/$JULIA_MINOR_VERSION/julia-$JULIA_VERSION-linux-x86_64.tar.gz"
      - "tar xf $TARTARUS_HOME/julia-$JULIA_VERSION-linux-x86_64.tar.gz -C $TARTARUS_HOME"

      # Instantiate, precompile, and download artifacts by running an empty testgroup and thereby executing /test/runtests.jl
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.instantiate(; verbose=true)'"
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.precompile()'"
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.status()'"

      # Download artifacts by running an empty testgroup and thereby executing /test/runtests.jl
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"

      # Use Conda.jl to provide PyPlot
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project=validation/convergence_tests/ -e 'using Pkg; Pkg.add(\"PyCall\"); ENV[\"PYTHON\"]=\"\"; Pkg.build(\"PyCall\"); using PyPlot;'"
    agents:
      queue: Oceananigans
      architecture: CPU

#####
##### Point exponential decay
#####

  - label: "üé± gpu point exponential decay"
    env:
      JULIA_DEPOT_PATH: "$SVERDRUP_HOME/.julia-validation-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "convergence"
      VALIDATION_TEST: "point_exponential_decay"
    commands:
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: GPU
    depends_on: "init_gpu"
    artifact_paths:
      - "validation/convergence_tests/figs/*"

  - label: "‚öΩ cpu point exponential decay"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-validation-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "convergence"
      VALIDATION_TEST: "point_exponential_decay"
      CUDA_VISIBLE_DEVICES: "-1"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    depends_on: "init_cpu"
    artifact_paths:
      - "validation/convergence_tests/figs/*"

#####
##### Cosine advection-diffusion
#####

  - label: "‚ö° gpu cosine advection-diffusion"
    env:
      JULIA_DEPOT_PATH: "$SVERDRUP_HOME/.julia-validation-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "convergence"
      VALIDATION_TEST: "cosine_advection_diffusion"
    commands:
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: GPU
    depends_on: "init_gpu"
    artifact_paths:
      - "validation/convergence_tests/figs/*"

  - label: "üîå cpu cosine advection-diffusion"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-validation-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "convergence"
      VALIDATION_TEST: "cosine_advection_diffusion"
      CUDA_VISIBLE_DEVICES: "-1"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    depends_on: "init_cpu"
    artifact_paths:
      - "validation/convergence_tests/figs/*"

#####
##### Gaussian advection-diffusion
#####

  - label: "üåã gpu gaussian advection-diffusion"
    env:
      JULIA_DEPOT_PATH: "$SVERDRUP_HOME/.julia-validation-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "convergence"
      VALIDATION_TEST: "gaussian_advection_diffusion"
    commands:
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: GPU
    depends_on: "init_gpu"
    artifact_paths:
      - "validation/convergence_tests/figs/*"

  - label: "‚õ∞Ô∏è cpu gaussian advection-diffusion"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-validation-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "convergence"
      VALIDATION_TEST: "gaussian_advection_diffusion"
      CUDA_VISIBLE_DEVICES: "-1"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    depends_on: "init_cpu"
    artifact_paths:
      - "validation/convergence_tests/figs/*"

#####
##### 1D advection schemes
#####

  - label: "üèçÔ∏è gpu advection schemes"
    env:
      JULIA_DEPOT_PATH: "$SVERDRUP_HOME/.julia-validation-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "convergence"
      VALIDATION_TEST: "advection_schemes"
    commands:
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: GPU
    depends_on: "init_gpu"
    artifact_paths:
      - "validation/convergence_tests/figs/*"

  - label: "üö≤ cpu advection schemes"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-validation-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "convergence"
      VALIDATION_TEST: "advection_schemes"
      CUDA_VISIBLE_DEVICES: "-1"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    depends_on: "init_cpu"
    artifact_paths:
      - "validation/convergence_tests/figs/*"

#####
##### 2D Diffusion
#####

  - label: "‚òÄÔ∏è gpu diffusion"
    env:
      JULIA_DEPOT_PATH: "$SVERDRUP_HOME/.julia-validation-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "convergence"
      VALIDATION_TEST: "diffusion"
    commands:
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: GPU
    depends_on: "init_gpu"
    artifact_paths:
      - "validation/convergence_tests/figs/*"

  - label: "üî• cpu diffusion"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-validation-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "convergence"
      VALIDATION_TEST: "diffusion"
      CUDA_VISIBLE_DEVICES: "-1"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    depends_on: "init_cpu"
    artifact_paths:
      - "validation/convergence_tests/figs/*"

#####
##### 2D Taylor-Green
#####

  - label: "üåÄ gpu taylor-green"
    env:
      JULIA_DEPOT_PATH: "$SVERDRUP_HOME/.julia-validation-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "convergence"
      VALIDATION_TEST: "taylor_green"
    commands:
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: GPU
    depends_on: "init_gpu"
    artifact_paths:
      - "validation/convergence_tests/figs/*"

  - label: "üå™Ô∏è cpu taylor-green"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-validation-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "convergence"
      VALIDATION_TEST: "taylor_green"
      CUDA_VISIBLE_DEVICES: "-1"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    depends_on: "init_cpu"
    artifact_paths:
      - "validation/convergence_tests/figs/*"

#####
##### Forced flow free slip
#####

  - label: "üèí gpu forced flow free slip"
    env:
      JULIA_DEPOT_PATH: "$SVERDRUP_HOME/.julia-validation-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "convergence"
      VALIDATION_TEST: "forced_free_slip"
    commands:
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: GPU
    depends_on: "init_gpu"
    artifact_paths:
      - "validation/convergence_tests/figs/*"

  - label: "‚õ∏Ô∏è cpu forced flow free slip"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-validation-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "convergence"
      VALIDATION_TEST: "forced_free_slip"
      CUDA_VISIBLE_DEVICES: "-1"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    depends_on: "init_cpu"
    artifact_paths:
      - "validation/convergence_tests/figs/*"

#####
##### Forced flow fixed slip
#####

  - label: "üõãÔ∏è gpu forced flow fixed slip"
    env:
      JULIA_DEPOT_PATH: "$SVERDRUP_HOME/.julia-validation-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "convergence"
      VALIDATION_TEST: "forced_fixed_slip"
    commands:
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: GPU
    depends_on: "init_gpu"
    artifact_paths:
      - "validation/convergence_tests/figs/*"

  - label: "üí∫ cpu forced flow fixed slip"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-validation-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "convergence"
      VALIDATION_TEST: "forced_fixed_slip"
      CUDA_VISIBLE_DEVICES: "-1"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU
    depends_on: "init_cpu"
    artifact_paths:
      - "validation/convergence_tests/figs/*"

#####
##### Clean up
#####

  - wait: ~
    continue_on_failure: true

  - label: "üßª clean up gpu environment"
    command: "rm -rfv $SVERDRUP_HOME/.julia-validation-$BUILDKITE_BUILD_NUMBER"
    agents:
      queue: Oceananigans
      architecture: GPU

  - label: "üßπ clean up cpu environment"
    command: "rm -rfv $TARTARUS_HOME/.julia-validation-$BUILDKITE_BUILD_NUMBER"
    agents:
      queue: Oceananigans
      architecture: CPU
