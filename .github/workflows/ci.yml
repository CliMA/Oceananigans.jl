name: CI

on:
  pull_request:
    paths:
      - '.github/workflows/ci.yml'
      - 'ext/**'
      - 'src/**'
      - 'test/**'
      - 'Project.toml'
  push:
    branches:
      - main
    tags: '*'
    paths:
      - '.github/workflows/ci.yml'
      - 'ext/**'
      - 'src/**'
      - 'test/**'
      - 'Project.toml'

concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  reactant_tests:
    name: ${{ matrix.test_name }} - Julia ${{ matrix.version }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        version: ['1.10']
        os: ['ubuntu-latest']
        include:
          - test_name: "Serial Reactant"
            test_group: "reactant"
          - test_name: "Sharding with Reactant"
            test_group: "sharding"
    steps:
      - run: |
          touch LocalPreferences.toml

          echo "[Reactant]" >> LocalPreferences.toml
          echo "xla_runtime = \"IFRT\"" >> LocalPreferences.toml

          cat LocalPreferences.toml     
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
      - uses: julia-actions/cache@v2
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
        env:
          JULIA_DEBUG: "Reactant, Reactant_jll"
          REACTANT_TEST: true
          TEST_GROUP: ${{ matrix.test_group }}

  additional_tests:
    name: ${{ matrix.test_name }} - Julia ${{ matrix.version }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        version: ['1.10']
        os: ['ubuntu-latest']
        include:
          - test_name: "Distributed MPI Tripolar Grid"
            test_group: "mpi_tripolar"
          - test_name: "Turbulence Closures"
            test_group: "turbulence_closures"
          - test_name: "Metal"
            test_group: "metal"
            os: macos-latest
          - test_name: "Conservative Regridding"
            test_group: "conservative_regridding"
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
      - name: Instantiate environment
        timeout-minutes: 90
        shell: julia --color=yes --project {0}
        run: |
          using Pkg
          Pkg.Registry.update()
          Pkg.add([PackageSpec(; name="ConservativeRegridding", url="https://github.com/JuliaGeo/ConservativeRegridding.jl.git", rev="mk/interface")])
          Pkg.instantiate()
      - uses: julia-actions/cache@v2
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
        env:
          TEST_GROUP: ${{ matrix.test_group }}
